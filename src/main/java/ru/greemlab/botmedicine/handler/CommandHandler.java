package ru.greemlab.botmedicine.handler;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Message;
import ru.greemlab.botmedicine.scheduler.DeleteScheduler;
import ru.greemlab.botmedicine.service.AuthorizedGroupUserService;
import ru.greemlab.botmedicine.service.GroupScheduleService;
import ru.greemlab.botmedicine.service.MessageService;

@Slf4j
@Component
@RequiredArgsConstructor
public class CommandHandler {
    private static final int DELAY_10 = 10;
    private static final int DELAY_15 = 15;
    private static final int DELAY_20 = 20;
    private static final int DELAY_25 = 25;
    private static final int DELAY_100 = 100;
    private static final int DELAY_DAY = 36000;

    @Value("${app.bot.admin-id}")
    private Long admin;

    private final MessageService messageService;
    private final DeleteScheduler deleteScheduler;

    private final GroupScheduleService groupScheduleService;
    private final AuthorizedGroupUserService authorizedGroupUserService;


    public void handleCommand(Message message) {
        var text = (message.getText() == null) ? "" : message.getText().trim();
        var chatId = message.getChatId();
        var userMessageId = message.getMessageId();
        var userName = message.getFrom().getUserName();

        if (!text.startsWith("/")) {
            return;
        }

        deleteScheduler.schedulerDeleteMessage(chatId, userMessageId, DELAY_10);

        var userId = message.getFrom().getId();

        var parts = text.split("\\s+");
        var command = text.split("\\s")[0].toLowerCase().split("@")[0];

        if (chatId < 0) {
            var registered = groupScheduleService.isGroupRegistered(chatId);
            if (registered) {
                authorizedGroupUserService.addUser(userName,userId, chatId);
                log.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É {}", userId, chatId);
            }
        }

        switch (command) {
            case "/hi" -> {
                var hi = """
                        üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤ üíä.
                        –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–∞–∂–º–∏—Ç–µ /start –∏ –º—ã –ø–µ—Ä–µ–π–¥–µ–º –≤ –ª–∏—á–Ω—É—é –±–µ—Å–µ–¥—É
                        """;
                var botMessage = messageService.sendText(chatId, hi);
                sendAndDeleteMessage(botMessage, chatId, DELAY_20);
            }
            case "/start" -> {
                var welcome = """
                        *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!*
                        ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å *—Å—Ä–æ–∫–∏ –≥–æ–¥–Ω–æ—Å—Ç–∏* –ª–µ–∫–∞—Ä—Å—Ç–≤.
                        ‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å *–≥—Ä–∞—Ñ–∏–∫*.
                        """;
                var botMessage = messageService
                        .sendTextWithTwoInlineButtons(
                                userId,
                                welcome,
                                "‚è∞ –°—Ä–æ–∫–∏ –≥–æ–¥–Ω–æ—Å—Ç–∏", "CHECK_RED",
                                "üìÖ –ì—Ä–∞—Ñ–∏–∫", "VIEW_SCHEDULE"
                        );
                sendAndDeleteMessage(botMessage, userId, DELAY_DAY);

            }
            case "/schedule" -> {
                    if (!groupScheduleService.isGroupRegistered(chatId)) {
                        var notRegMsg = messageService.sendText(chatId,
                                "–≠—Ç–∞ –≥—Ä—É–ø–ø–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞, –≥—Ä–∞—Ñ–∏–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.");
                        sendAndDeleteMessage(notRegMsg, userId, DELAY_10);
                    } else {
                        if (authorizedGroupUserService.isUserAuthorized(userName, userId, chatId)) {
                            var scheduleOpt = groupScheduleService.findSchedulerUrl(chatId);
                            if (scheduleOpt.isPresent()) {
                                var scheduleUrl = scheduleOpt.get();
                                var botMessage = messageService.sendPhoto(userId, scheduleUrl, "–ì—Ä–∞—Ñ–∏–∫");
                                sendAndDeleteMessage(botMessage, userId, DELAY_25);
                            } else {
                                var msg = messageService.sendText(chatId, "–°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
                                sendAndDeleteMessage(msg, userId, DELAY_25);
                            }
                        } else {
                            var msg = messageService.sendText(chatId,
                                    "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞. –í—ã –Ω–µ –≤ —Å–ø–∏—Å–∫–µ –¥–ª—è —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã.");
                            sendAndDeleteMessage(msg, userId, DELAY_10);
                        }
                    }
            }
            case "/setgroup" -> {
                if (!userId.equals(admin)) {
                    var msg = messageService.sendText(chatId, "–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.");
                    sendAndDeleteMessage(msg, chatId, DELAY_15);
                }
                if (parts.length < 3) {
                    var msg = messageService.sendText(chatId, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setgroup <groupChatId> <scheduleUrl>");
                    sendAndDeleteMessage(msg, chatId, DELAY_15);
                }
                try {
                    var grpId = Long.parseLong(parts[1]);
                    var url = parts[2];
                    groupScheduleService.upsertGroup(grpId, url);
                    var okMsg = messageService.sendText(chatId,
                            "–ì—Ä—É–ø–ø–∞ " + grpId + " –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å–æ —Å—Å—ã–ª–∫–æ–π: " + url);
                    sendAndDeleteMessage(okMsg, chatId, DELAY_15);
                } catch (NumberFormatException e) {
                    var msg = messageService.sendText(chatId, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç groupChatId.");
                    sendAndDeleteMessage(msg, chatId, 10);
                }
            }

            case "/removeuser" -> {
                if (!userId.equals(admin)) {
                    var msg = messageService
                            .sendText(chatId, "–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.");
                    sendAndDeleteMessage(msg, chatId, DELAY_15);
                }
                if (parts.length < 3) {
                    var msg = messageService.sendText(chatId,
                            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /removeuser <groupChatId> <userId>");
                    sendAndDeleteMessage(msg, chatId, DELAY_15);
                }
                try {
                    var grpId = Long.parseLong(parts[1]);
                    var rmUserId = Long.parseLong(parts[2]);
                    authorizedGroupUserService.removeUser(userName, grpId, rmUserId);
                    var msg = messageService.sendText(chatId,
                            "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " + rmUserId + " —É–¥–∞–ª—ë–Ω –∏–∑ –≥—Ä—É–ø–ø—ã " + grpId + ".");
                    sendAndDeleteMessage(msg, chatId, DELAY_15);
                } catch (NumberFormatException e) {
                    var msg = messageService.sendText(chatId, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.");
                    sendAndDeleteMessage(msg, chatId, DELAY_15);
                }
            }
            case "/help" -> {
                var help = """
                        *–ö–æ–º–∞–Ω–¥—ã:*
                        
                        /start ‚Äì –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
                        /hi ‚Äì –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
                        /help ‚Äì –ø–æ–º–æ—â—å
                        /schedule ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ –¥–ª—è *—Ç–µ–∫—É—â–µ–π* –≥—Ä—É–ø–ø—ã (–µ—Å–ª–∏ –≤—ã –≤ —Å–ø–∏—Å–∫–µ)
                        
                        *–ê–¥–º–∏–Ω—Å–∫–∏–µ*:
                        /setgroup <groupChatId> <scheduleUrl> ‚Äî –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å –≥—Ä—É–ø–ø—É —Å –µ—ë —Å—Å—ã–ª–∫–æ–π
                        /removeuser <groupChatId> <userId>
                        
                        –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.
                        """;
                var botMessage = messageService.sendText(chatId, help);
                sendAndDeleteMessage(botMessage, userId, DELAY_100);
            }
            default -> {
                var botMessage = messageService
                        .sendText(userId, "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /help.");
                sendAndDeleteMessage(botMessage, userId, DELAY_25);
            }
        }
    }

    private void sendAndDeleteMessage(Message botMessage, Long recipientId, int delaySeconds) {
        if (botMessage != null) {
            deleteScheduler.schedulerDeleteMessage(recipientId, botMessage.getMessageId(), delaySeconds);
        }
    }
}